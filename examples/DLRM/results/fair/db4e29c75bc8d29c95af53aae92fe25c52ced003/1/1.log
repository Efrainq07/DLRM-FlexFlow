/usr/share/modules/init/bash: line 58: export: _moduleraw: not a function
1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000
../../src/runtime/dlrm_strategy_emb_8_gpu_8_node_1.pb
[0 - 7f406eef8800] {4}{threads}: reservation ('DMA request queue') cannot be satisfied
[0 - 7f3fbc6b3700] {3}{Mapper}: Load parallelization strategy from file ../../src/runtime/dlrm_strategy_emb_8_gpu_8_node_1.pb
strategies.size() = 11
[0 - 7f3fbc6b3700] {3}{DLRM}: batchSize(4096) workersPerNodes(8) numNodes(1)
[0 - 7f3fbc6b3700] {3}{DLRM}: EmbeddingBagSize(1)
[0 - 7f3fbc6b3700] {3}{DLRM}: Embedding Vocab Sizes: 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000
[0 - 7f3fbc6b3700] {3}{DLRM}: MLP Top: 2304 1024 1024 1024 1024 1
[0 - 7f3fbc6b3700] {3}{DLRM}: MLP Bot: 64 1024 1024 1024 256
strategies.size() = 11
workSpaceSize (1024 MB)
workSpaceSize (1024 MB)
workSpaceSize (1024 MB)
workSpaceSize (1024 MB)
workSpaceSize (1024 MB)
workSpaceSize (1024 MB)
workSpaceSize (1024 MB)
workSpaceSize (1024 MB)
concat: dim[0] = 4096
concat: dim[1] = 2304
domain.volume() = 1048576 mean(0.0000) var(0.0312)
domain.volume() = 1024 mean(0.0000) var(0.0442)
domain.volume() = 1024 mean(0.0000) var(0.0442)
domain.volume() = 1048576 mean(0.0000) var(0.0312)
domain.volume() = 65536 mean(0.0000) var(0.0429)
domain.volume() = 256 mean(0.0000) var(0.0884)
domain.volume() = 262144 mean(0.0000) var(0.0395)
domain.volume() = 1024 mean(0.0000) var(0.0442)
domain.volume() = 2359296 mean(0.0000) var(0.0245)
domain.volume() = 1048576 mean(0.0000) var(0.0312)
domain.volume() = 1024 mean(0.0000) var(0.0442)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
domain.volume() = 1048576 mean(0.0000) var(0.0312)
domain.volume() = 1024 mean(0.0000) var(0.0442)
domain.volume() = 1024 mean(0.0000) var(0.0442)
domain.volume() = 1048576 mean(0.0000) var(0.0312)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
domain.volume() = 1024 mean(0.0000) var(0.0442)
domain.volume() = 1024 mean(0.0000) var(0.0442)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
domain.volume() = 1 mean(0.0000) var(1.4142)
init linear (input): in_dim(64) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(1024) out_dim(256) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(2304) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1024) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
init linear (input): in_dim(1024) out_dim(1) batch_size(512)
[0 - 7f3fbc6b3700] {3}{DLRM}: Use random dataset...
[0 - 7f3fbc6b3700] {3}{DLRM}: Number of random samples = 8192

[0 - 7f3fbc6b3700] {3}{DLRM}: Start generating random input samples
acc_train_loss: 0.2560 train_accuracy: 51.42%(2106/4096)
[0 - 7f3fbc6b3700] {3}{DLRM}: Warmup finished...Start timer...
[0 - 7f3fbc6b3700] {3}{DLRM}: Num. epochs = 5
[0 - 7f3fbc6b3700] {3}{DLRM}: Num. iterations/epoch = 2
acc_train_loss: 0.5141 train_accuracy: 48.58%(1990/4096)
acc_train_loss: 0.5142 train_accuracy: 48.58%(3980/8192)
acc_train_loss: 0.5142 train_accuracy: 48.58%(1990/4096)
acc_train_loss: 0.5142 train_accuracy: 48.58%(3980/8192)
acc_train_loss: 0.5142 train_accuracy: 48.58%(1990/4096)
acc_train_loss: 0.5142 train_accuracy: 48.58%(3980/8192)
acc_train_loss: 0.5142 train_accuracy: 48.58%(1990/4096)
acc_train_loss: 0.5142 train_accuracy: 48.58%(3980/8192)
acc_train_loss: 0.5142 train_accuracy: 48.58%(1990/4096)
acc_train_loss: 0.5142 train_accuracy: 48.58%(3980/8192)
ELAPSED TIME = 2.2355s, THROUGHPUT = 18322.29 samples/s
